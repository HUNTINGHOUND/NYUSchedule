{"version":3,"sources":["components/use-list.jsx","components/SearchItems.jsx","components/CourseCatalog.jsx","components/SearchDisplay.jsx","components/use-async.jsx","components/SearchOption.jsx","components/Searcher.jsx","components/Event.jsx","resource/colors.js","components/CalendarModal.jsx","components/Calendar.jsx","components/Main.jsx","components/Topbar.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["useList","initList","useState","list","setList","addList","useCallback","item","prev","deleteList","index","length","newarr","splice","updateList","val","concatList","Info","props","style","float","paddingRight","name","message","SearchItems","prof","gettip","result","Object","entries","key","value","join","useEffect","info","param","axios","get","url","then","res","data","ReactTooltip","rebuild","className","onClick","e","target","tagName","date_strings","split","weekdays","match","start_time","moment","end_time","day","start_date","end_date","hour","minute","second","handleAddCourse","href","rel","infolist","i","push","color","displayInfo","CourseCatalog","start","end","slice","classes","course","classObj","newClassObj","assign","Instructor","getAllClass","SearchDisplay","courses","getCourses","useAsync","asyncFunction","immediate","status","setStatus","setValue","error","setError","execute","response","catch","Option","Select","SearchOption","options","useMemo","JSON","parse","term_code","setTermCode","acad_group","setAcadGroup","acad_name","setAcadName","subject","setSubject","catalog_nbr","setCatalogNbr","keyword","setKeyword","class_nbr","setClassNbr","terms","setTerms","onSearchCallBack","a","searchAsyncFunction","handleSearch","console","log","width","showSearch","placeholder","optionFilterProp","onChange","term","t","filterOption","input","option","children","toLowerCase","indexOf","getTerms","acad","code","schools","getAcad","sub","substring","search","sub_option","getSubject","type","disabled","Searcher","setData","Event","background","format","html_colors","RangePicker","TimePicker","CalendarModal","setInput","setColor","setStart","setEnd","color_options","map","backgroundColor","isSame","defaultValue","moments","minuteStep","disabledHours","Array","keys","from","num","filterSort","optionA","optionB","localeCompare","onSelect","onRemove","actionType","onSave","Calendar","eventComponent","modalComponent","firstDay","dayFormat","startTime","h","m","endTime","numberOfDays","selectedIntervals","onIntervalSelect","handleIntervalSelect","onIntervalUpdate","handleIntervalUpdate","onIntervalRemove","handleIntervalRemove","Main","available_uid","setUid","interval","uid","newIntervals","intervals","event","findIndex","TopBar","App","place","effect","multiline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2a25abb.chunk.js","sourcesContent":["import {useState, useCallback} from 'react';\n\n/**\n * Use hook to reuse the same code for list states. Basically providing helper functions for manipulating list states.\n * @param {*} initList The initial list to use\n */\nconst useList = (initList) => {\n    const [list, setList] = useState(initList);\n\n    /**\n     * Add an item to the list\n     */\n    const addList = useCallback(item => {\n        setList(prev => {\n            return [...prev, item]\n        });\n    }, [setList]);\n\n    /**\n     * Delete the index from the list. \n     */\n    const deleteList = useCallback(index => {\n        if(index < 0 || index >= list.length) return;\n        setList(prev => {\n            // create new array\n            var newarr = [...prev];\n            newarr.splice(index, 1);\n            return newarr;\n        });\n    }, [setList, list.length]);\n\n    /**\n     * Update element at the index\n     */\n    const updateList = useCallback(\n        (index, val) => {\n            setList(prev => {\n                var newarr = [...prev];\n                newarr[index] = val;\n                return newarr;\n            })\n        },\n        [setList],\n    );\n\n    /**\n     * Concatenate another list to the current list \n     */\n    const concatList = useCallback(\n        (list) => {\n            setList(prev => [...prev, ...list]\n            )\n        },\n        [setList],\n    )\n\n    return {list, addList, deleteList, updateList, concatList, setList};\n}\n\nexport default useList;","import axios from \"axios\";\nimport React, { useEffect } from \"react\";\nimport useList from \"./use-list\";\nimport moment from \"moment\";\nimport ReactTooltip from \"react-tooltip\";\n\n/**\n * Component rendering the key-value pair of a class.\n */\nconst Info = (props) => {\n  return (\n    <li>\n        <b style={{float:'left', paddingRight:\"10px\"}}>{props.name}:</b> <div style={{float:'left'}}>{props.message}</div>\n    </li>\n  );\n};\n\nconst SearchItems = (props) => {\n  const prof = useList([]);\n\n  /**\n   * Display info passed in through a format accepted by react-tool-tip\n   * @param {*} prof Info to display\n   * @returns String that can be used by tool tip.\n   */\n  const gettip = (prof) => {\n    let result = \"\";\n    if (!prof) {\n      return \"No profile on RMP\";\n    }\n\n    for (const [key, value] of Object.entries(prof)) {\n      if (key === \"url\" || key === \"tid\") {\n        continue;\n      }\n\n      result =\n        result + `<br />${key}: ${key === \"Tags\" ? value.join(\", \") : value}`;\n    }\n\n    return result.length === 0 ? \"No profile on RMP\" : result;\n  };\n\n  /**\n   * When the component first renders, try to get the instructor/s information from Rate My Professor\n   */\n  useEffect(() => {\n    prof.setList([]);\n    for (let name of props.info[\"Instructor\"]) {\n      if (name === \"Staff\") {\n        prof.addList({});\n        continue;\n      }\n      var param = \"name=\" + name;\n      var url = \"https://nyuscheduleserver.herokuapp.com/rmp/getProf\";\n\n      axios.get(url + \"?\" + param)\n        .then((res) => {\n          prof.addList(res.data);\n        });\n\n    }\n    // eslint-disable-next-line\n  }, [props]);\n\n  /**\n   * Rebuild the tool tip for dynamic content\n   */\n  useEffect(() => {\n    ReactTooltip.rebuild();\n  })\n\n  /**\n   * Construct a list of components that represent the key-value pair of info of the class. \n   * @returns A list of components to be rendered.\n   */\n  const displayInfo = () => {\n    let infolist = [];\n\n    let index = 0;\n    for (const [name, message] of Object.entries(props.info)) {\n      if (name === \"class_name\" || name === \"link\") {\n        continue;\n      }\n\n      if (name === \"Instructor\") {\n        for (let i = 0; i < message.length; i += 1) {\n          infolist.push(\n            <Info\n              key={index}\n              name={name}\n              message={\n                <a\n                  href={\n                    prof.list[i] && prof.list[i].url\n                      ? \"//\" + prof.list[i].url\n                      : \"#\"\n                  }\n                  data-tip={gettip(prof.list[i])}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  onClick={()=>{}}\n                >\n                  {message[i]}\n                </a>\n              }\n            />\n          );\n\n          index += 1;\n        }\n      } else {\n        infolist.push(<Info key={index} name={name} message={name === 'Status' ? \n          (message === 'Open' ? <div style={{color:\"blue\", float:'left'}}>{message}</div> : (message === 'Closed' ? <div style={{color:\"red\"}}>{message}</div> \n          : \n          <div style={{color:\"#FF8C00\"}}>{message}</div>)) : message}/>);\n        index += 1;\n\n      }\n    }\n\n    return infolist;\n  };\n\n  /**\n   * Handle when a course is clicked. Will use call back function given by props to add interval to the calendar. \n   * @param {*} e The click event\n   */\n  const onCourseClick = (e) => {\n    if(e.target.tagName === 'A') return;\n    const date_strings = props.info[\"Days/Times\"].split(' ');\n    const weekdays = date_strings[0].match(/.{1,2}/g);\n    const start_time = moment(date_strings[1], 'hh:mm a');\n    const end_time = moment(date_strings[3], 'hh:mm a');\n\n    for(let day of weekdays) {\n      let start_date = moment();\n      let end_date = moment();\n\n      if(day === 'Mo') {\n        start_date = moment().day(1);\n        end_date = moment().day(1);\n      } else if(day === 'Tu') {\n        start_date = moment().day(2);\n        end_date = moment().day(2);\n      } else if(day === 'We') {\n        start_date = moment().day(3);\n        end_date = moment().day(3);\n      } else if(day === 'Th') {\n        start_date = moment().day(4);\n        end_date = moment().day(4);\n      } else if(day === 'Fr') {\n        start_date = moment().day(5);\n        end_date = moment().day(5);\n      } else {\n        continue;\n      }\n\n      start_date.hour(start_time.hour());\n      start_date.minute(start_time.minute());\n      start_date.second(0);\n\n      end_date.hour(end_time.hour());\n      end_date.minute(end_time.minute());\n      end_date.second(0);\n\n      props.handleAddCourse(start_date, end_date, props.info[\"class_name\"]);\n    }\n  }\n\n  return (\n    <button className=\"search-item\" onClick={onCourseClick}>\n      <div className=\"item-name\">{props.info[\"class_name\"]}</div>\n      <div className=\"info-container\" data-tip=\"Click me to see details.\">\n        <a\n          className=\"info-circle\"\n          href={props.info[\"link\"]}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          i\n        </a>\n      </div>\n      <ul className=\"item-attrib-collection\">{displayInfo()}</ul>\n    </button>\n  );\n};\n\nexport default SearchItems;\n","import React from 'react';\nimport SearchItems from './SearchItems.jsx';\n\n/**\n * Component that represent an entire course (note there are multiple class for one course).\n */\nconst CourseCatalog = (props) => {\n  /**\n   * A wrapper functions that prepend the symbol of the course on to the value to be displayed on the calendar.\n   * @param {moment} start The start time of the interval\n   * @param {moment} end The end time of the interval\n   * @param {string} value The value to be displayed on the calendar\n   */\n  const handleAddCourse = (start, end, value) => {\n    const name = (props.name.match(/\\w+-\\w+ \\d+ -/)[0]).slice(0, -1);\n    props.handleAddCourse(start, end, name + \"\\n\" + value);\n  }\n\n  /**\n   * Get all the classes under this course and render their component. Pass down the required props.\n   */\n  const getAllClass = () => {\n    var classes = [];\n\n    var index = 0;\n    for(let classObj of props.course) {\n      const newClassObj = {};\n      Object.assign(newClassObj, classObj);\n      newClassObj.Instructor = classObj.Instructor.split(', ');\n\n      classes.push(<SearchItems key={index} info={newClassObj} handleAddCourse={handleAddCourse}/>);\n\n      index++;\n    }\n\n    return classes;\n  };\n\n\n  return (\n    <div className=\"course-cata\">\n      <h3 className=\"course-title\">{props.name}</h3>\n      {getAllClass()}\n    </div>\n    )\n}\n\nexport default CourseCatalog","import React from 'react';\nimport CourseCatalog from './CourseCatalog';\n\n/**\n * Component that gathers courses. This display the search result once the query is completed.\n */\nconst SearchDisplay = (props) => {\n  /**\n   * Create a list of course components using the info passed through props.\n   * @returns A list of course components. \n   */\n  const getCourses = () => {\n    let courses = [];\n    if (!props.data) return courses;\n\n\n    let index = 0;\n    for (const [name, info] of Object.entries(props.data)) {\n      courses.push(<CourseCatalog key={index} course={info} name={name} handleAddCourse={props.handleAddCourse}/>);\n      index++;\n    }\n\n    return courses;\n  }\n\n  return (\n    <div className=\"searcher-display\">\n      <h1>Search Results</h1>\n      <div className=\"display\">\n        {getCourses()}\n      </div>\n    </div>)\n}\n\nexport default SearchDisplay;","import { useState, useCallback, useEffect} from \"react\";\n\n/**\n * Async use hook calls the asynchronous function you supply to it while setting the status. \n * There are four states:\n * - idle\n * - pending\n * - success\n * - error\n * \n * Idle is only set before the function is ever called. These status allow users to disable certain features before a request is complete, especially if\n * the request is long.\n * @param {*} asyncFunction asynchronous function to be executed\n * @param {*} immediate whether or not the function is to be executed immediately\n */\nconst useAsync = (asyncFunction, immediate = true) => {\n    const [status, setStatus] = useState(\"idle\");\n    const [value, setValue] = useState(null);\n    const [error, setError] = useState(null);\n    \n    /**\n     * Execute the given function. Set the value, error, and status appropriately.\n     */\n    const execute = useCallback(\n        () => {\n            setStatus(\"pending\");\n            setValue(null);\n            setError(null);\n\n            return asyncFunction()\n                .then((response) => {\n                    setValue(response);\n                    setStatus(\"success\");\n                })\n                .catch((error) => {\n                    setError(error);\n                    setStatus(\"error\");\n                })\n        },\n        [asyncFunction],\n    )\n\n    /**\n     * Check if on mount the function needs to be executed immediately.\n     */\n    useEffect(() => {\n        if(immediate) {\n            execute();\n        }\n    }, [execute, immediate]);\n\n    return {execute, status, value, error};\n}\n\nexport default useAsync;","import React, { useEffect, useMemo, useState, useCallback} from 'react';\nimport raw from 'raw.macro';\nimport { Select, Input, Button } from 'antd';\nimport axios from 'axios';\nimport useAsync from './use-async';\n\nconst { Option } = Select;\n\n/**\n * Component represents the search options and search button. \n */\nconst SearchOption = (props) => {\n  /**\n   * See /src/resource/options.json for more details. \n   * The file contains add the school name and their respective majors.\n   */\n  const options = useMemo(() => JSON.parse(raw('../resource/options.json')), []);\n\n  const [term_code, setTermCode] = useState(0);\n  const [acad_group, setAcadGroup] = useState('');\n  const [acad_name, setAcadName] = useState('');\n  const [subject, setSubject] = useState('');\n  const [catalog_nbr, setCatalogNbr] = useState(0);\n  const [keyword, setKeyword] = useState('');\n  const [class_nbr, setClassNbr] = useState('');\n  const [terms, setTerms] = useState([]);\n\n  /**\n   * Async function for sending request that get courses based on the configuration chosen by the user. \n   * useCallback hook to make sure useAsync would not fall into a loop.\n   * @return course information in JSON\n   */\n  const onSearchCallBack = useCallback( async () => {\n    var param = `term_code=${term_code}&acad_group=${acad_group}&subject=${subject}&catalog_nbr=${catalog_nbr}&keyword=${keyword}&class_nbr=${class_nbr}`;\n    const url = 'https://nyuscheduleserver.herokuapp.com/albert/getcourse';\n    let res = await axios.get(url + \"?\" + param);\n    return res.data;\n  }, [term_code, acad_group, subject, catalog_nbr, keyword, class_nbr]);\n\n  const searchAsyncFunction = useAsync(onSearchCallBack, false);\n\n  /**\n   * When the search is successful, pass the values to parent component that will handle the value.\n   */\n  useEffect(() => {\n    if(searchAsyncFunction.status === \"success\") {\n      props.handleSearch(searchAsyncFunction.value);\n    }\n  }, [searchAsyncFunction.value, searchAsyncFunction.status, props]);\n\n  /**\n   * When components first mounts, get the available terms.\n   */\n  useEffect(() => {\n    console.log('Sending request for terms');\n    const url = 'https://nyuscheduleserver.herokuapp.com/albert/getTerms';\n\n    axios.get(url).then((res) => {\n      console.log('Recieved terms:', res.data);\n      setTerms(res.data);\n    });\n  }, []);\n\n  /**\n   * Get the option components for the majors. The components changes based on which school the user picked previously. \n   * @returns A list of option components.\n   */\n  const getSubject = () => {\n    let sub_option = [];\n\n    if (acad_name === '') {\n      sub_option.push(\n        <Option key={0} value=\"\">\n          Select a school first\n        </Option>\n      );\n      return sub_option;\n    }\n\n    var i = 0;\n    for (let sub in options.acad_group[acad_name].subject) {\n      sub_option.push(\n        <Option\n          key={i}\n          value={`${options.acad_group[acad_name].subject[sub]}:${sub}`}\n        >\n          {options.acad_group[acad_name].subject[sub]}\n        </Option>\n      );\n\n      i += 1;\n    }\n\n    return sub_option;\n  };\n\n  /**\n   * Handle changing major selection. Note that the value of major is formatted as \"longname:symbol\". Since the server only takes symbol for\n   * major parameter, this format is used as a key-value pair.\n   * @param {*} sub Subject that is to be switched to.\n   */\n  const changeSubject = (sub) => {\n    setSubject(sub.substring(sub.search(':') + 1, sub.length));\n  };\n\n  /**\n   * Get option components for the semester terms.\n   * @returns A list options components.\n   */\n  const getTerms = () => {\n    let options = [];\n    if (terms.length <= 0) {\n      return options;\n    }\n\n    let index = 0;\n    for (let term of terms) {\n      options.push(\n        <Option key={index} value={term[1]}>\n          {term[1]}\n        </Option>\n      );\n\n      index += 1;\n    }\n\n    return options;\n  };\n\n  /**\n   * Handle term change. \n   * @param {*} term Term to be switched to.\n   */\n  const changeTerm = (term) => {\n    for (let t of terms) {\n      if (t[1] === term) {\n        setTermCode(t[0]);\n        return;\n      }\n    }\n  };\n\n  /**\n   * Get option components for the academic group (aka schools).\n   * @returns \n   */\n  const getAcad = () => {\n    let schools = [];\n\n    let index = 0;\n    for (const name in options.acad_group) {\n      schools.push(\n        <Option key={index} value={name}>\n          {name}\n        </Option>\n      );\n\n      index += 1;\n    }\n\n    return schools;\n  }\n\n  /**\n   * Handle change the acad group\n   * @param {*} acad acad group to be changed into.\n   */\n  const changeAcad = (acad) => {\n    setAcadGroup(options.acad_group[acad].code);\n    setAcadName(acad);\n    console.log(\"set acad_group to\", options.acad_group[acad].code);\n  }\n\n  /**\n   * Handle changing catalog number\n   * @param {*} e Change event\n   */\n  const onCatalogChange = e => {\n    setCatalogNbr(e.target.value);\n  }\n\n  /**\n   * Handle changing keyword\n   * @param {*} e Change event\n   */\n  const onKeywordChange = e => {\n    setKeyword(e.target.value);\n  }\n\n  /**\n   * Handle changing class number\n   * @param {*} e Change event\n   */\n  const onClassChange = e => {\n    setClassNbr(e.target.value);\n  }\n\n  return (\n    <div className=\"search-option\">\n        <div className=\"select-container\">\n          <div className=\"search-field\">\n            <label>*Term</label>\n            <div className=\"search-select\">\n              <Select\n                style={{\n                  width: '100%'\n                }}\n                showSearch=\"showSearch\"\n                placeholder=\"Select a term\"\n                optionFilterProp=\"children\"\n                onChange={changeTerm}\n                filterOption={(input, option) => {\n                  return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n                }\n              }>\n              {getTerms()}\n            </Select>\n          </div>\n        </div>\n\n        <div className=\"search-field\">\n          <label>*School</label>\n          <div className=\"search-select\">\n            <Select\n              style={{\n                width: '100%'\n              }}\n              showSearch=\"showSearch\"\n              placeholder=\"Select a school\"\n              optionFilterProp=\"children\"\n              onChange={changeAcad}\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n              }>\n              {getAcad()}\n            </Select>\n          </div>\n        </div>\n\n        <div className=\"search-field\">\n          <label>*Subject</label>\n          <div className=\"search-select\">\n            <Select\n              style={{\n                width: '100%'\n              }}\n              showSearch=\"showSearch\"\n              placeholder=\"Select a subject\"\n              optionFilterProp=\"children\"\n              onChange={changeSubject}\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n              }>\n              {getSubject()}\n            </Select>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"input-container\">\n        <div className=\"search-field\">\n          <label>Keyword</label>\n          <div className=\"search-input\">\n            <Input\n              style={{\n                width: '100%'\n              }}\n              placeholder=\"Input keyword\"\n              onChange={onKeywordChange}/>\n          </div>\n        </div>\n\n        <div className=\"small-container\">\n\n          <div className=\"search-field\">\n            <label>\n              Catalog Number\n            </label>\n            <div className=\"search-input\">\n              <Input\n                style={{\n                  width: '100%'\n                }}\n                placeholder=\"Input catalog\"\n                onChange={onCatalogChange}/>\n            </div>\n          </div>\n\n          <div className=\"search-field\">\n            <label>\n              Class Number\n            </label>\n            <div className=\"search-input\">\n              <Input\n                style={{\n                  width: '100%'\n                }}\n                placeholder=\"Input keyword\"\n                onChange={onClassChange}/>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <Button type=\"primary\" onClick={searchAsyncFunction.execute} disabled={searchAsyncFunction.status === \"pending\"}>Search</Button>\n\n    </div>\n  )\n};\n\nexport default SearchOption;","import React, {useState} from 'react';\nimport SearchDisplay  from './SearchDisplay.jsx';\nimport SearchOption from './SearchOption.jsx';\n\n/**\n * Searcher component that gathers the search component and the display component.\n */\nconst Searcher = (props) => {\n  const [data, setData] = useState({});\n\n  /**\n   * Handle search result. Save the result to the state which is then passed down the the display component.\n   * @param {*} res Result of the search.\n   */\n  const handleSearch = (res) => {\n    setData(res.courses)\n  }\n\n  return (\n    <div className=\"searcher\">\n      <SearchOption handleSearch={handleSearch} />\n      <SearchDisplay data={data} handleAddCourse={props.handleAddCourse} />\n    </div>)\n}\n\nexport default Searcher;\n","import React from 'react';\n\nconst Event = props => {\n    return (\n        <div className=\"calendar-event\" style={{background: props.color}}>\n            <span>{`${props.start.format('HH:mm')} - ${props.end.format('HH:mm')}`}</span>\n            <br />\n            <div>{props.value}</div>\n        </div>\n    )\n}\n\nexport default Event;","const html_colors = [\"whitesmoke\",\"wheat\",\"violet\",\"thistle\",\"tan\",\"steelblue\",\"snow\",\"slateblue\",\"sienna\",\"seagreen\",\"salmon\",\"yellowgreen\",\"saddlebrown\",\"royalblue\",\"tomato\",\"powderblue\",\"pink\",\"palevioletred\",\"paleturquoise\",\"palegoldenrod\",\"orchid\",\"papayawhip\",\"orangered\",\"orange\",\"olivedrab\",\"oldlace\",\"mintcream\",\"midnightblue\",\"mediumvioletred\",\"mediumturquoise\",\"mediumspringgreen\",\"mediumslateblue\",\"mediumseagreen\",\"limegreen\",\"aliceblue\",\"lightslategrey\",\"sandybrown\",\"lightseagreen\",\"slategrey\",\"lightsalmon\",\"mediumpurple\",\"deeppink\",\"lightgreen\",\"teal\",\"lightgray\",\"aqua\",\"lightcoral\",\"lemonchiffon\",\"indigo\",\"hotpink\",\"azure\",\"grey\",\"lightskyblue\",\"honeydew\",\"gold\",\"gainsboro\",\"ghostwhite\",\"linen\",\"black\",\"forestgreen\",\"floralwhite\",\"firebrick\",\"chocolate\",\"dodgerblue\",\"antiquewhite\",\"dimgrey\",\"dimgray\",\"lavender\",\"lightgrey\",\"deepskyblue\",\"blue\",\"darkred\",\"ivory\",\"darkturquoise\",\"mistyrose\",\"lavenderblush\",\"darkslategray\",\"navajowhite\",\"lightslategray\",\"magenta\",\"lightsteelblue\",\"darkseagreen\",\"cornsilk\",\"darkorange\",\"darkslategrey\",\"khaki\",\"darkorchid\",\"moccasin\",\"greenyellow\",\"darkblue\",\"darkolivegreen\",\"slategray\",\"silver\",\"lime\",\"darkgreen\",\"palegreen\",\"gray\",\"red\",\"beige\",\"darksalmon\",\"lightcyan\",\"plum\",\"lightblue\",\"darkgray\",\"darkgoldenrod\",\"maroon\",\"cyan\",\"mediumorchid\",\"chartreuse\",\"darkmagenta\",\"crimson\",\"rosybrown\",\"coral\",\"mediumblue\",\"bisque\",\"darkviolet\",\"darkslateblue\",\"skyblue\",\"burlywood\",\"peachpuff\",\"blueviolet\",\"blanchedalmond\",\"goldenrod\",\"lightpink\",\"darkgrey\",\"springgreen\",\"aquamarine\",\"mediumaquamarine\",\"turquoise\",\"brown\",\"lawngreen\",\"olive\",\"white\",\"indianred\",\"green\",\"navy\",\"darkkhaki\",\"yellow\",\"lightyellow\",\"seashell\",\"cadetblue\",\"lightgoldenrodyellow\",\"darkcyan\",\"purple\",\"peru\",\"cornflowerblue\",\"fuchsia\"];\nexport default html_colors;","import React, { useState, useMemo } from 'react';\nimport { Button, Input, Select, TimePicker } from 'antd';\nimport html_colors from '../resource/colors';\n\nconst { Option } = Select;\nconst { RangePicker } = TimePicker;\n\nconst CalendarModal = props => {\n    const [input, setInput] = useState(props.value);\n    const [color, setColor] = useState(props.color);\n    const [start, setStart] = useState(props.start);\n    const [end, setEnd] = useState(props.end);\n\n    const handleRemove = () => props.onRemove();\n    const handleSave = () => {\n        console.log(\"saving \", input);\n        props.onSave({\n            start,\n            end,\n            value: input,\n            color\n        });\n    }\n\n    const renderText = () => {\n        if (start.isSame(end, 'day')) {\n            return <span>{`${start.format('HH:mm')} - ${end.format('HH:mm')}`}</span>\n        }\n\n        return <span>{`${start.format('Do MMM.')} - ${end.format('Do MMM.')}, ${start.format('HH:mm')} - ${end.format('HH:mm')}`}</span>;\n    }\n\n    const color_options = useMemo(() => html_colors.map((color, index) => <Option value={color} key={index}><div className=\"color-box\" style={{backgroundColor: color}}></div>{color}</Option>), []);\n\n    return (\n        <div className=\"modal\">\n            <div className=\"modal-text\">{renderText()}</div>\n            <RangePicker\n                className=\"modal-picker\"\n                defaultValue={[start, end]}\n                onChange={moments => {\n                    setStart(moments[0]);\n                    setEnd(moments[1]);\n                }}\n                format=\"HH:mm\"\n                minuteStep={15}\n                disabledHours={() => {\n                    console.log(Array(6).keys());\n                    const disabled = [...Array(6).keys(), ...(Array.from(Array(4).keys()).map((num) => {\n                        return num + 20;\n                    }))];\n                    console.log(disabled);\n                    return disabled;\n                }}\n            />\n            <Input\n                className=\"modal-input\"\n                type=\"text\"\n                placeholder=\"Enter something\"\n                defaultValue={props.value}\n                onChange={e => setInput(e.target.value)}\n            />\n            <Select\n                showSearch\n                className='modal-select'\n                placeholder='Select Color'\n                optionFilterProp='children'\n                filterOption={(input, option) => {\n                    return option.value.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }}\n                filterSort={(optionA, optionB) => {\n                    return optionA.value.toLowerCase().localeCompare(optionB.value.toLowerCase())\n                }}\n                onSelect={(value) => setColor(value)}\n                defaultValue={props.color}\n                >\n                    {color_options}\n            </Select>\n            <Button className='modal-button' onClick={handleRemove}>{props.actionType === 'edit' ? 'Delete' : 'Cancel'}</Button>\n            <Button className='modal-button float-right' onClick={handleSave}>Save</Button>\n        </div>\n    )\n}\n\nexport default CalendarModal;","import moment from \"moment\";\nimport React from 'react';\nimport WeekCalendar from \"react-week-calendar\";\nimport Event from \"./Event\";\nimport CalendarModal from \"./CalendarModal\";\n\n/**\n * Wrapper of the WeekCalendar component. Display a week view calendar.\n */\nconst Calendar = (props) => {\n  return (\n    <div className=\"calendar\">\n      <WeekCalendar \n        eventComponent={Event}\n        modalComponent={CalendarModal}\n        firstDay={moment().day(1)}\n        dayFormat=\"ddd\"\n        startTime={moment({h:6, m:0})}\n        endTime={moment({h:21, m:0})}\n        numberOfDays={5}\n        selectedIntervals={props.selectedIntervals}\n        onIntervalSelect={props.handleIntervalSelect}\n        onIntervalUpdate={props.handleIntervalUpdate}\n        onIntervalRemove={props.handleIntervalRemove}\n      />\n    </div>\n  );\n};\n\nexport default Calendar;\n","import React, { useState } from \"react\";\nimport Searcher from \"./Searcher\";\nimport Calendar from \"./Calendar\";\nimport useList from \"./use-list\";\n\n/**\n * Component to hold the calendar and the searcher. Also act as a bubble up state holder for the calendar.\n */\nconst Main = () => {\n  /**\n   * See the react-week-calendar to learn details.\n   *\n   * The calendar uses selectedIntervals to track information about events it should display.\n   * Each interval needs a id to uniquely identify it, available_uid gives the next available uid.\n   */\n  const selectedIntervals = useList([]);\n  const [available_uid, setUid] = useState(1);\n\n  /**\n   * Handle removal of an interval given the object\n   * @param {*} event interval to be removed.\n   */\n  const handleEventRemove = (event) => {\n    const index = selectedIntervals.list.findIndex(\n      (interval) => interval.uid === event.uid\n    );\n\n    if (index > -1) selectedIntervals.deleteList(index);\n  };\n\n  /**\n   * Handle updating event given the interval object.\n   * @param {*} event interval to be updated.\n   */\n  const handleEventUpdate = (event) => {\n    const index = selectedIntervals.list.findIndex(\n      (interval) => interval.uid === event.uid\n    );\n\n    if (index > -1) selectedIntervals.updateList(index, event);\n  };\n\n  /**\n   * Handle a list of intervals to be added.\n   * @param {*} newIntervals a list of intervals to be added. \n   */\n  const handleSelect = (newIntervals) => {\n    const intervals = newIntervals.map((interval, index) => {\n      return {\n        ...interval,\n        uid: available_uid + index,\n      };\n    });\n\n    console.log(\"trigger\");\n\n    selectedIntervals.concatList(intervals);\n    setUid((prev) => prev + 1);\n  };\n\n  /**\n   * Handle adding a single interval given the start time, end time, and value.\n   * @param {moment} start Start time\n   * @param {moment} end End time\n   * @param {string} value String to be displayed.\n   */\n  const handleAddCourse = (start, end, value) => {\n    const interval = {\n      start: start,\n      end: end,\n      value: value,\n      uid: available_uid,\n      color: \"DodgerBlue\"\n    };\n\n    selectedIntervals.addList(interval);\n    setUid((prev) => prev + 1);\n  };\n\n  return (\n    <div className=\"main\">\n      <Searcher handleAddCourse={handleAddCourse} />\n      <Calendar\n        selectedIntervals={selectedIntervals.list}\n        handleIntervalSelect={handleSelect}\n        handleIntervalUpdate={handleEventUpdate}\n        handleIntervalRemove={handleEventRemove}\n      />\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nconst TopBar = () => {\n    return (\n        <div className='topbar'>\n            A NYU course schedule helper site developed by <a className=\"git-link\" href=\"https://github.com/HUNTINGHOUND\">Morgan Xu</a>\n        </div>\n    )\n}\n\nexport default TopBar;","import React from \"react\";\nimport Main from \"./Main\";\nimport TopBar from \"./Topbar\";\nimport ReactTooltip from \"react-tooltip\"\n\n/**\n * The component that represent the entire application.\n */\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <TopBar />\n      <Main />\n      <ReactTooltip place='right' type='dark' effect='solid' multiline={true} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}